import{__assign as o}from"tslib";import{jsx as t}from"react/jsx-runtime";import{useState as e,useEffect as i}from"react";import{useTUIKitContext as n}from"../../context/TUIKitContext.js";import{ConversationPreviewContent as r}from"./ConversationPreviewContent.js";import{getDisplayImage as a,getDisplayTitle as s,getDisplayMessage as v,getDisplayTime as m}from"./utils.js";function l(l){var u=l.activeConversation,c=l.conversation,p=l.Preview,d=void 0===p?r:p,C=l.searchValue,f=l.conversationUpdateCount,y=n("ConversationPreview"),j=y.setActiveConversation,x=y.myProfile,I=e(a(c)),P=I[0],w=I[1],T=e(s(c,C)),g=T[0],A=T[1],D=e(v(c,x)),U=D[0],b=D[1],h=e(m(c)),K=h[0],M=h[1],V=e(c.unreadCount),k=V[0],q=V[1],z=(null==u?void 0:u.conversationID)===(null==c?void 0:c.conversationID);return d?(i((function(){A(s(c,C)),b(v(c,x)),w(a(c)),M(m(c)),q(c.unreadCount)}),[c,C,f]),t(d,o({},l,{active:z,displayImage:P,displayTitle:g,displayMessage:U,displayTime:K,unread:k,setActiveConversation:j}))):null}export{l as ConversationPreview};
